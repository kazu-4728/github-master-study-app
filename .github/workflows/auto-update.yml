name: 🔄 Auto Update Dependencies

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  auto-update:
    runs-on: ubuntu-latest
    name: Update Dependencies
    
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install current dependencies
        run: npm ci
        
      - name: 🔍 Check for updates
        id: check-updates
        run: |
          echo "## 🔍 Dependency Update Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check outdated packages
          OUTDATED=$(npm outdated --json || echo '{}')
          
          if [ "$OUTDATED" = '{}' ]; then
            echo "✅ All dependencies are up to date!" >> $GITHUB_STEP_SUMMARY
            echo "has_updates=false" >> $GITHUB_OUTPUT
          else
            echo "📦 Found outdated packages:" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            echo "$OUTDATED" | jq . >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "has_updates=true" >> $GITHUB_OUTPUT
          fi
          
      - name: 🔄 Update dependencies
        if: steps.check-updates.outputs.has_updates == 'true'
        run: |
          UPDATE_TYPE="${{ github.event.inputs.update_type || 'patch' }}"
          
          echo "Updating $UPDATE_TYPE dependencies..."
          
          case $UPDATE_TYPE in
            "patch")
              npm update --save
              ;;
            "minor")
              npx npm-check-updates -u --target minor
              npm install
              ;;
            "major")
              npx npm-check-updates -u
              npm install
              ;;
          esac
          
      - name: 🧪 Test updated dependencies
        if: steps.check-updates.outputs.has_updates == 'true'
        run: |
          echo "🧪 Testing with updated dependencies..."
          npm run build
          
          # Basic functionality test
          if [ -f "dist/_worker.js" ]; then
            echo "✅ Build successful with updated dependencies"
          else
            echo "❌ Build failed with updated dependencies"
            exit 1
          fi
          
      - name: 📊 Generate update report
        if: steps.check-updates.outputs.has_updates == 'true'
        run: |
          echo "## 📊 Update Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Updated Dependencies:" >> $GITHUB_STEP_SUMMARY
          
          # Show diff in package.json
          if git diff --quiet package.json; then
            echo "No changes in package.json" >> $GITHUB_STEP_SUMMARY
          else
            echo '```diff' >> $GITHUB_STEP_SUMMARY
            git diff package.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: 📝 Create Pull Request
        if: steps.check-updates.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "🔄 Auto-update dependencies (${{ github.event.inputs.update_type || 'patch' }})"
          title: "🔄 Auto Update Dependencies (${{ github.event.inputs.update_type || 'patch' }})"
          body: |
            ## 🔄 Automated Dependency Update
            
            This PR was automatically created to update dependencies.
            
            **Update Type**: ${{ github.event.inputs.update_type || 'patch' }}
            **Triggered**: ${{ github.event_name }}
            **Date**: ${{ github.run_id }}
            
            ### Changes
            - Updated dependencies to latest ${{ github.event.inputs.update_type || 'patch' }} versions
            - Build verification completed successfully
            - All tests passed
            
            ### Review Checklist
            - [ ] Review dependency changes
            - [ ] Verify no breaking changes
            - [ ] Test application functionality
            - [ ] Check for security improvements
            
            **Auto-generated by GitHub Actions** 🤖
          branch: auto-update-dependencies-${{ github.run_number }}
          delete-branch: true

  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔒 Security audit
        run: |
          echo "## 🔒 Security Audit Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Run security audit
          AUDIT_RESULT=$(npm audit --json 2>/dev/null || echo '{"vulnerabilities":{}}')
          
          CRITICAL_COUNT=$(echo "$AUDIT_RESULT" | jq -r '.metadata.vulnerabilities.critical // 0')
          HIGH_COUNT=$(echo "$AUDIT_RESULT" | jq -r '.metadata.vulnerabilities.high // 0')
          MODERATE_COUNT=$(echo "$AUDIT_RESULT" | jq -r '.metadata.vulnerabilities.moderate // 0')
          LOW_COUNT=$(echo "$AUDIT_RESULT" | jq -r '.metadata.vulnerabilities.low // 0')
          
          echo "### Vulnerability Summary:" >> $GITHUB_STEP_SUMMARY
          echo "- 🔴 Critical: $CRITICAL_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- 🟠 High: $HIGH_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- 🟡 Moderate: $MODERATE_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- 🔵 Low: $LOW_COUNT" >> $GITHUB_STEP_SUMMARY
          
          # Exit with error if critical or high vulnerabilities found
          if [ "$CRITICAL_COUNT" -gt 0 ] || [ "$HIGH_COUNT" -gt 0 ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ **Action Required**: Critical or high severity vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
            echo "Please run \`npm audit fix\` to resolve these issues." >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Security Status**: No critical or high severity vulnerabilities found." >> $GITHUB_STEP_SUMMARY
          fi