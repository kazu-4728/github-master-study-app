name: 🔍 Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    name: Code Quality & Security
    
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build check
        run: npm run build
        
      - name: 📊 Bundle size analysis
        run: |
          echo "## 📦 Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Output:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          ls -lah dist/ >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          # Calculate total size
          TOTAL_SIZE=$(du -sh dist/ | cut -f1)
          echo "**Total Bundle Size: $TOTAL_SIZE**" >> $GITHUB_STEP_SUMMARY
          
      - name: 🔒 Security audit
        run: |
          echo "## 🔒 Security Audit" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          npm audit --audit-level moderate || echo "⚠️ Security vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          
      - name: 📋 Project structure validation
        run: |
          echo "## 📁 Project Structure" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Key Files Present:" >> $GITHUB_STEP_SUMMARY
          
          FILES_TO_CHECK=("package.json" "wrangler.jsonc" "src/index.tsx" "ecosystem.config.cjs" "README.md")
          
          for file in "${FILES_TO_CHECK[@]}"; do
            if [ -f "$file" ]; then
              echo "✅ $file" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ $file (missing)" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
      - name: 🌍 Environment validation
        run: |
          echo "## 🌍 Environment Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- npm: $(npm --version)" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript: $(npx tsc --version)" >> $GITHUB_STEP_SUMMARY
          
          # Check if Wrangler config is valid
          if npx wrangler pages project list --help > /dev/null 2>&1; then
            echo "- Wrangler: ✅ Available" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Wrangler: ❌ Not configured" >> $GITHUB_STEP_SUMMARY
          fi

  performance-check:
    runs-on: ubuntu-latest
    name: Performance & Optimization
    
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build for performance analysis
        run: npm run build
        
      - name: ⚡ Performance metrics
        run: |
          echo "## ⚡ Performance Metrics" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # File size analysis
          if [ -f "dist/_worker.js" ]; then
            WORKER_SIZE=$(wc -c < dist/_worker.js | numfmt --to=iec)
            echo "- **Worker Bundle**: $WORKER_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check for large files
          echo "### Large Files (>100KB):" >> $GITHUB_STEP_SUMMARY
          find dist/ -type f -size +100k -exec ls -lh {} \; | awk '{print "- " $9 " (" $5 ")"}' >> $GITHUB_STEP_SUMMARY || echo "No large files found" >> $GITHUB_STEP_SUMMARY
          
          # Static assets analysis
          if [ -d "dist/static" ]; then
            STATIC_COUNT=$(find dist/static -type f | wc -l)
            STATIC_SIZE=$(du -sh dist/static | cut -f1)
            echo "- **Static Assets**: $STATIC_COUNT files, $STATIC_SIZE total" >> $GITHUB_STEP_SUMMARY
          fi

  compatibility-check:
    runs-on: ubuntu-latest
    name: Browser & Platform Compatibility
    
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build application
        run: npm run build
        
      - name: 🌐 Compatibility analysis
        run: |
          echo "## 🌐 Compatibility Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check for modern JS features
          echo "### JavaScript Features:" >> $GITHUB_STEP_SUMMARY
          if grep -r "async\|await" dist/ > /dev/null 2>&1; then
            echo "- ✅ ES2017+ (async/await)" >> $GITHUB_STEP_SUMMARY
          fi
          
          if grep -r "=>" dist/ > /dev/null 2>&1; then
            echo "- ✅ ES6+ (Arrow functions)" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check for Web APIs used
          echo "### Web APIs:" >> $GITHUB_STEP_SUMMARY
          if grep -r "fetch" dist/ > /dev/null 2>&1; then
            echo "- ✅ Fetch API" >> $GITHUB_STEP_SUMMARY
          fi
          
          if grep -r "localStorage" dist/ > /dev/null 2>&1; then
            echo "- ✅ LocalStorage" >> $GITHUB_STEP_SUMMARY
          fi
          
          # CSS features
          echo "### CSS Features:" >> $GITHUB_STEP_SUMMARY
          if find dist/ -name "*.css" -exec grep -l "grid\|flexbox\|flex" {} \; | wc -l | grep -q "[1-9]"; then
            echo "- ✅ CSS Grid/Flexbox" >> $GITHUB_STEP_SUMMARY
          fi
          
          if find dist/ -name "*.css" -exec grep -l "var(" {} \; | wc -l | grep -q "[1-9]"; then
            echo "- ✅ CSS Custom Properties" >> $GITHUB_STEP_SUMMARY
          fi